using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace WindowsFormsApp1
{  //updated 
    public partial class RegisterForm : Form
    {   //Creating a Reference  to Database  
        SqlConnection connection = new SqlConnection(@"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=""New Database"";Integrated Security=True;");

        public RegisterForm()
        {
            InitializeComponent();//The InitializeComponent() method in a Windows Forms application is automatically generated by the designer when you create a form
        }

        private void register_loginBtn_Click(object sender, EventArgs e)
        {
            //Redirecting  to  login page 
            LoginPage loginPage = new LoginPage();
            loginPage.Show();
            this.Hide();
        }

        private void close_Click(object sender, EventArgs e)
        {
            //Hide    the page  when close  symbol us clicked 
            Application.Exit();
        }
        public bool check_for_empty()
        //Checking if any empty value is entered
        {
            if (register_password.Text == "" || register_username.Text == "" || register_CPass.Text == "")
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        private void register_password_TextChanged(object sender, EventArgs e)
        {
            register_password.PasswordChar = register_show.Checked ? '\0' : '*';
            //Represents the null character, which means no masking. When set, the password field will display the actual characters typed
            register_CPass.PasswordChar = register_show.Checked ? '\0' : '*';
        }

        private void register_btn_Click(object sender, EventArgs e)
        { 
            // Checking :: All  feilds are filled 
            if (check_for_empty())
            {
                MessageBox.Show("All Fields are required to be filled", "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            //Chekcing for  length 
            if (register_password.Text.Length < 8)
            {
                MessageBox.Show("Password length is too short. At least 8 characters are needed.", "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            //Checking: Password matched both Password and confirm   
            if (register_password.Text != register_CPass.Text)
            {
                MessageBox.Show("Passwords do not match", "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }


            try
            {
                if (connection.State == ConnectionState.Closed)
                    connection.Open();

                // Check if the username already exists
                string selectusername = "SELECT * FROM users WHERE username = @usern";
                
                
                using (SqlCommand checkUsername = new SqlCommand(selectusername, connection))
                {
                    checkUsername.Parameters.AddWithValue("@usern", register_username.Text.Trim());
                    SqlDataAdapter adapter = new SqlDataAdapter(checkUsername);
                    DataTable table = new DataTable();
                    adapter.Fill(table);

                    if (table.Rows.Count > 0)
                    {
                        string usern = register_username.Text.Substring(0, 1).ToUpper() + register_username.Text.Substring(1);
                        MessageBox.Show(usern + " is already taken", "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return;
                    }
                }

                // Insert the new user
                string insertData = "INSERT INTO users (username, password, profile_image, role, status, date_reg)" +
                                    "VALUES (@usern, @pass, @image, @role, @status, @date)";
                using (SqlCommand cmd = new SqlCommand(insertData, connection))
                {
                    DateTime today = DateTime.Today;
                    cmd.Parameters.AddWithValue("@usern", register_username.Text.Trim());
                    cmd.Parameters.AddWithValue("@pass", register_password.Text.Trim());
                    cmd.Parameters.AddWithValue("@image", DBNull.Value); // Use DBNull.Value for null database fields
                    cmd.Parameters.AddWithValue("@role", "Cashier");
                    cmd.Parameters.AddWithValue("@status", "Approve");
                    cmd.Parameters.AddWithValue("@date", today);

                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Registered Successfully!", "Information Message", MessageBoxButtons.OK, MessageBoxIcon.Information);
                  
                    //Switching  form  to login form 
                    LoginPage loginForm1 = new LoginPage();
                    loginForm1.Show();
                    this.Hide();   
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("An error occurred: " + ex.Message, "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                if (connection.State == ConnectionState.Open)
                    connection.Close();
            }
        }
    }
}